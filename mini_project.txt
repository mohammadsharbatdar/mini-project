#ifndef HEADER_H
#define HEADER_H

#include <iostream>

#include <string>

#include <vector>

#include <fstream>

using namespace std;

class lesson {

public:

vector<string> Lessons_List;

vector<string> Teachers_List;

vector<string> Student_file;

vector<string> classroom_time;

vector<vector<string>> Students_List;

vector<vector<int>> teacher_put_score;

vector<int> student_put_score;

vector<int> Lessons_Capacity;

vector<int> classroom_number;

vector<int> partical_unit;

vector<int> theory_unit;

vector<int> present_list;

vector<int> absent_list;

~lesson() {}

};

extern lesson Lesson;

class teacher {

private:

static void Create_lesson(string Name, int Capacity, int Partical_Unit, int Theory_Unit, int Classroom_Number, string Classroom_Time, string Teacher_Name);

static void Putting_homework(string lesson, string duty);

static void Putting_notification(string lesson, string note);

static void Putting_Attendance(string lesson);

protected:

friend void Putting_Score(string lesson);

public:

bool teacher_position = true;

static vector<string> homework;

static vector<string> notification;

friend void Create_Lesson(string Name, int Capacity, int Partical_Unit, int Theory_Unit, int Classroom_Number, string Classroom_Time, string Teacher_Name);

friend void Putting_Homework(string lesson, string duty);

friend void Putting_Notification(string lesson, string note);

friend void Putting_Attendance(string lesson);

~teacher() {}

};

void Create_Lesson(string Name, int Capacity, int Partical_Unit, int Theory_Unit, int Classroom_Number, string Classroom_Time, string Teacher_Name);

void Putting_Homework(string lesson, string duty);

void Putting_Notification(string lesson, string note);

void Putting_Attendance(string lesson);

class student: public teacher {

private:

staitc void add_lesson(string lesson, string Name);

public:

bool student_position = true;

friend void Add_Lesson(string lesson, string Name);

void See_Empty_Capactiy(string lesson);

void See_Notification(string lesson);

void Putting_Score(string lesson, int number);

void See_Score(string lesson, string Name);

void See_homework(string lesson);

void See_Classroom_Time(string lesson);

void See_Classroom_Number(string lesson);

void See_Units(string lesson);

~student() {}

};

void Add_Lesson(string lesson, string Name);

class admin {

private:

static void create_user(int choice);

static void update();

static void delete_user(string user, string Name);

static void restore(string user, string Name);

static void read();

public:

static vector<teacher> Teacher;

static vector<student> Student;

friend void Create_User(int choice, string Name, string Password);

friend void Update();

friend void Delete(string user, string Name);

friend void Restore(string user, string Name);

void Read();

};

void Create_User(int choice, string Name = "Hello", string Password = "Hello");

void Update();

void Delete(string user, string Name);

void Restore(string user, string Name);

void Read();

#endif
